{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.backend.name }}"
spec:
  selector:
    matchLabels:
      app: "{{ .Values.backend.name }}"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Values.backend.name }}"
    spec:
      containers:
        - name: "{{ .Values.backend.containers.name }}"
          image: "{{ .Values.backend.containers.image }}:{{ .Values.backend.containers.imageTag }}"
          imagePullPolicy: {{ .Values.backend.containers.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.backend.containers.port }}
          env:
            - name: SERVER_PORT
              value: "8080"
            - name: SPRING_DATASOURCE_URL
              value: {{ .Values.db.containers.database.url }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.db.containers.username }}
            - name: SPRING_DATASOURCE_PASSWORD
              value: {{ .Values.db.containers.password }}
            - name: SPRING_DATASOURCE_DRIVER-CLASS-NAME
              value: {{ .Values.db.containers.driverClassName }}
            - name: SPRING_JPA_DATABASE_PLATFORM
              value: {{ .Values.db.containers.databasePlatform }}
            - name: SPRING_SQL_INIT_MODE
              value: always
            - name: SPRING_H2_CONSOLE_ENABLED
              value: "true"
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL
              value: "true"
            - name: SPRING_JPA_HIBERNATE_DDL-AUTO
              value: update
            - name: SPRING_JPA_GENERATE-DDL
              value: "true"
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.bootstrapServers }}
            - name: SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET
              value: earliest
            - name: SPRING_KAFKA_CONSUMER_ENABLE_AUTO_COMMIT
              value: "true"
            - name: SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER
              value: org.apache.kafka.common.serialization.StringDeserializer
            - name: SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER
              value: org.apache.kafka.common.serialization.StringDeserializer
            - name: SPRING_KAFKA_CONSUMER_PROPERTIES_REQUEST_TIMEOUT_MS
              value: "60000"
            - name: SPRING_KAFKA_CONSUMER_PROPERTIES_SESSION_TIMEOUT_MS
              value: "60000"
            - name: SPRING_KAFKA_PRODUCER_KEY_SERIALIZER
              value: org.apache.kafka.common.serialization.StringSerializer
            - name: SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER
              value: org.apache.kafka.common.serialization.StringSerializer
            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK
              value: DEBUG
            - name: LOGGING_LEVEL_ORG_ROOT
              value: DEBUG
            - name: LOGGING_LEVEL_ORG_WEB
              value: DEBUG
            - name: USER-SERVICE_URL
              value: {{ .Values.userService.url }}
            - name: MESSAGE_TOPIC_NAME
              value: {{ .Values.kafka.topic.name }}
{{- end }}