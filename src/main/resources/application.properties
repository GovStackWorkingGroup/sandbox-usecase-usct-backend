spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:file:./src/main/resources/db/data/usct;AUTO_SERVER=true
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.generate-ddl=true
digitalregistries.bb.im.base-url=${DIGITALREGISTRIES_IM_BASE_URL:http://sandbox-xroad-ss2.sandbox-im.svc.cluster.local:8080/r1/SANDBOX/GOV/PROVIDER/DIGITALREGISTRIES/dr}
digitalregistries.bb.im.header=${DIGITALREGISTRIES_IM_HEADER:SANDBOX/ORG/CLIENT/TEST}
# Callback allowed CDIR
callback.cidr = ${CALLBACK_CIDR:0.0.0.0/0,::/0}
# Configuration which payment service to be used (Payment Modes: emulator/paymenthub)
payment.config.mode = ${PAYMENT_MODE:emulator}
# Global Payment Configuration
payment.variables.source-bb-id=${USCT-BB:USCT-BB}
payment.variables.government-identifier=${GOVERNMENT_IDENTIFIER:066283}
# Emulator  Payment Service Configuration
payment.bb.im.base-url=${PAYMENT_IM_BASE_URL:http://sandbox-xroad-ss2.sandbox-im.svc.cluster.local:8080/r1/SANDBOX/GOV/PROVIDER/PAYMENT/api}
payment.bb.im.header=${PAYMENT_IM_HEADER:SANDBOX/ORG/CLIENT/TEST}
# PaymentHub Service Configuration
paymenthub.bb.account-mapper-url = ${PAYMENTHUB_ACCOUNT_MAPPER_URL:http://ph-ee-identity-account-mapper.paymenthub.svc.cluster.local:8080}
paymenthub.bb.bulk-connector-url = ${PAYMENTHUB_BULK_CONNECTOR_URL:https://ph-ee-connector-bulk.paymenthub.svc.cluster.local:8443}
paymenthub.bb.callback-base-url = ${PAYMENT_CALLBACK_BASE_URL:http://backend.usct.svc.cluster.local:8080}
paymenthub.bb.registering-institution-id = ${PAYMENT_REGISTERING_INSTITUTION_ID:123456}
paymenthub.bb.tenant = ${PAYMENTHUB_TENANT:rhino}
paymenthub.bb.program-id = ${PAYMENTHUB_PROGRAM_ID:00}
paymenthub.bb.jws_tenant_private_key = ${JWS_TENANT_PRIVATE_KEY}
paymenthub.bb.payment_mode = ${PAYMENTHUB_PAYMENT_MODE:mojaloop}
paymenthub.bb.im.header=${PAYMENTHUB_IM_HEADER:SANDBOX/ORG/CLIENT/TEST}
rsa.private-key=classpath:certs/private.pem
rsa.public-key=classpath:certs/public.pem
server.error.whitelabel.enabled=true
server.error.include-message=never
server.error.include-stacktrace=never
server.forward-headers-strategy=native
server.tomcat.remoteip.protocol-header=x-forwarded-proto
server.tomcat.remoteip.port-header=x-forwarded-port
server.servlet.session.cookie.name=MOCK_SRIS_SESSION
server.servlet.session.cookie.same-site=lax
server.servlet.session.timeout=240m
spring.security.oauth2.client.registration.esignet.client-id=3fcrkksDka063CjGoJJZ7PHWPldw-JbwMYPdyLqbHQY
spring.security.oauth2.client.registration.esignet.client-authentication-method=private_key_jwt
spring.security.oauth2.client.registration.esignet.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.esignet.scope=openid,profile,email
spring.security.oauth2.client.registration.esignet.redirect-uri={baseUrl}/api/login/oauth2/code/esignet
# Using the issuer does not work with spring since the returned document is missing a required
# subject_types_supported attribute
# spring.security.oauth2.client.provider.esignet.issuer-uri=https://api-internal.tfgovidbb.sandbox-playground.com/v1/esignet/oidc/.well-known/openid-configuration
# Using the authorize URL from metadata document does not work
# spring.security.oauth2.client.provider.esignet.authorization-uri=https://api-internal.tfgovidbb.sandbox-playground.com/v1/esignet/authorize
spring.security.oauth2.client.provider.esignet.authorization-uri=https://esignet.tfgovidbb.sandbox-playground.com/authorize
spring.security.oauth2.client.provider.esignet.token-uri=https://api-internal.tfgovidbb.sandbox-playground.com/v1/esignet/oauth/token
spring.security.oauth2.client.provider.esignet.user-info-uri=https://api-internal.tfgovidbb.sandbox-playground.com/v1/esignet/oidc/userinfo
spring.security.oauth2.client.provider.esignet.user-info-authentication-method=header
spring.security.oauth2.client.provider.esignet.jwk-set-uri=https://api-internal.tfgovidbb.sandbox-playground.com/v1/esignet/oauth/.well-known/jwks.json
spring.security.oauth2.client.provider.esignet.user-name-attribute=sub
logging.level.org.springframework.web=INFO

open-imis.url=http://localhost:8000/data/registryname/111?search=package&filter=phone
open-imis.user=admin
open-imis.password=govstack

usct.authentication=mosip
